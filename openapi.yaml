openapi: 3.0.3
info:
  title: MTG Deck Manager API
  description: API RESTful para criar, gerenciar e explorar decks e torneios de Magic: The Gathering.
  version: 1.0.0

servers:
  - url: https://api.mtgdeckmanager.com/v1

paths:
  /cards:
    get:
      summary: Listar todas as cartas
      responses:
        '200':
          description: Lista de cartas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardDTO'
  /cards/{id}:
    get:
      summary: Obter detalhes de uma carta
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Carta encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDTO'
  /decks:
    get:
      summary: Listar decks públicos
      responses:
        '200':
          description: Lista de decks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeckDTO'
    post:
      summary: Criar novo deck
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeckCreateDTO'
      responses:
        '201':
          description: Deck criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeckDTO'
  /decks/{id}:
    get:
      summary: Buscar deck por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes do deck
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeckDTO'
  /auth/register:
    post:
      summary: Registrar novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterDTO'
      responses:
        '201':
          description: Usuário registrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
  /auth/login:
    post:
      summary: Autenticar usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDTO'
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
  /tournaments:
    get:
      summary: Listar torneios
      responses:
        '200':
          description: Lista de torneios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TournamentDTO'

components:
  schemas:
    CardDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        manaCost:
          type: string
        type:
          type: string
        rarity:
          type: string
        set:
          type: string
        power:
          type: string
        toughness:
          type: string
        text:
          type: string
        colors:
          type: array
          items:
            type: string
        imageUrl:
          type: string

    DeckDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        format:
          type: string
        visibility:
          type: string
        creator:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
        cards:
          type: array
          items:
            type: object
            properties:
              cardId:
                type: integer
              quantity:
                type: integer
        createdAt:
          type: string
        likes:
          type: integer
        comments:
          type: integer

    DeckCreateDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        format:
          type: string
        visibility:
          type: string
        cards:
          type: array
          items:
            type: object
            properties:
              cardId:
                type: integer
              quantity:
                type: integer

    UserDTO:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        avatarUrl:
          type: string
        bio:
          type: string
        decksCreated:
          type: integer
        friendsCount:
          type: integer

    UserRegisterDTO:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        confirmPassword:
          type: string

    LoginRequestDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    LoginResponseDTO:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/UserDTO'
        expiresAt:
          type: string

    TournamentDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        format:
          type: string
        organizer:
          type: string
        startDate:
          type: string
        participants:
          type: integer
        status:
          type: string

